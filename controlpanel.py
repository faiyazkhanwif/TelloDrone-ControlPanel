# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'controlpanel.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import tello
import time

from PyQt5 import QtCore, QtGui, QtWidgets

#-------------------------------------------Testing function takeoff button------------------------------
def clicked():
    print("testing")

#-------------------------------------------Perimeter sweep----------------------------------------------
def persweep():
    # Create Billy
    billy = tello.Tello()

    # Travel to/from starting checkpoint 0 from/to the charging base
    frombase = ["forward", 50, "ccw", 150]
    tobase = ["ccw", 150, "forward", 50]

    # Flight path to Checkpoint 1 to 5 and back to Checkpoint 0 sequentially
    checkpoint = [[1, "cw", 90, "forward", 100], [2, "ccw", 90, "forward", 80], [3, "ccw", 90, "forward", 40],
                  [4, "ccw", 90, "forward", 40], [5, "cw", 90, "forward", 60], [0, "ccw", 90, "forward", 40]]

    # Put Tello into command mode
    billy.send("command", 3)

    # Send the takeoff command
    billy.send("takeoff", 7)

    print("\n")

    # Start at checkpoint 1 and print destination
    print("From the charging base to the starting checkpoint of sweep pattern.\n")

    billy.send(frombase[0] + " " + str(frombase[1]), 4)
    billy.send(frombase[2] + " " + str(frombase[3]), 4)

    print("Current location: Checkpoint 0 " + "\n")

    # Billy's flight path
    for i in range(len(checkpoint)):
        if i == len(checkpoint) - 1:
            print("Returning to Checkpoint 0. \n")

        billy.send(checkpoint[i][1] + " " + str(checkpoint[i][2]), 4)
        billy.send(checkpoint[i][3] + " " + str(checkpoint[i][4]), 4)

        print("Arrived at current location: Checkpoint " + str(checkpoint[i][0]) + "\n")
        time.sleep(4)

    # Reach back at Checkpoint 0
    print("Complete sweep. Return to charging base.\n")
    billy.send(tobase[0] + " " + str(tobase[1]), 4)
    billy.send(tobase[2] + " " + str(tobase[3]), 4)

    # Turn to original direction before land
    print("Turn to original direction before land.\n")
    billy.send("cw 180", 4)

    # Land
    billy.send("land", 3)

    # Close the socket
    billy.sock.close()

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        MainWindow.setStyleSheet("background-color:rgb(248, 249, 255)")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.fbtn = QtWidgets.QPushButton(self.centralwidget)
        self.fbtn.setGeometry(QtCore.QRect(360, 40, 81, 111))
        self.fbtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.fbtn.setStyleSheet("background-color: rgb(139, 139, 139);\n"
"color: white;")
        self.fbtn.setObjectName("fbtn")
        self.bcbtn = QtWidgets.QPushButton(self.centralwidget)
        self.bcbtn.setGeometry(QtCore.QRect(360, 230, 81, 111))
        self.bcbtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.bcbtn.setStyleSheet("background-color: rgb(139, 139, 139);\n"
"color: white;")
        self.bcbtn.setObjectName("bcbtn")
        self.rbtn = QtWidgets.QPushButton(self.centralwidget)
        self.rbtn.setGeometry(QtCore.QRect(440, 150, 111, 81))
        self.rbtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.rbtn.setStyleSheet("background-color: rgb(139, 139, 139);\n"
"color: white;")
        self.rbtn.setObjectName("rbtn")
        self.lbtn = QtWidgets.QPushButton(self.centralwidget)
        self.lbtn.setGeometry(QtCore.QRect(250, 150, 111, 81))
        self.lbtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.lbtn.setStyleSheet("background-color: rgb(139, 139, 139);\n"
"color: white;")
        self.lbtn.setObjectName("lbtn")
        self.peribtn = QtWidgets.QPushButton(self.centralwidget)
        self.peribtn.setGeometry(QtCore.QRect(10, 450, 211, 91))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.peribtn.setFont(font)
        self.peribtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.peribtn.setStyleSheet("background-color: rgb(0, 170, 255);\n"
"color: white;\n"
"border-radius: 20px;")
        self.peribtn.setObjectName("peribtn")
        self.overrbtn = QtWidgets.QPushButton(self.centralwidget)
        self.overrbtn.setGeometry(QtCore.QRect(590, 450, 201, 91))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.overrbtn.setFont(font)
        self.overrbtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.overrbtn.setStyleSheet("background-color: rgb(255, 206, 56);\n"
"color: white;\n"
"border-radius: 20px;")
        self.overrbtn.setObjectName("overrbtn")
        self.labelmanu = QtWidgets.QLabel(self.centralwidget)
        self.labelmanu.setGeometry(QtCore.QRect(330, -10, 151, 51))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.labelmanu.setFont(font)
        self.labelmanu.setObjectName("labelmanu")
        self.dfbtn = QtWidgets.QPushButton(self.centralwidget)
        self.dfbtn.setGeometry(QtCore.QRect(300, 450, 211, 91))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.dfbtn.setFont(font)
        self.dfbtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.dfbtn.setStyleSheet("background-color: rgb(68, 68, 68);\n"
"color: white;\n"
"border-radius: 20px;")
        self.dfbtn.setObjectName("dfbtn")
        self.tobtn = QtWidgets.QPushButton(self.centralwidget)
        self.tobtn.setGeometry(QtCore.QRect(10, 100, 201, 161))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.tobtn.setFont(font)
        self.tobtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.tobtn.setStyleSheet("background-color: rgb(0, 202, 0);\n"
"color: white;\n"
"border-radius: 70px;")
        self.tobtn.setObjectName("tobtn")
        self.stopbtn = QtWidgets.QPushButton(self.centralwidget)
        self.stopbtn.setGeometry(QtCore.QRect(590, 100, 201, 161))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.stopbtn.setFont(font)
        self.stopbtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.stopbtn.setStyleSheet("background-color: rgb(255, 32, 32);\n"
"color: white;\n"
"border-radius: 70px;")
        self.stopbtn.setObjectName("stopbtn")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)


# -------------------------------Connecting takeoff method to takeoff button---------------------------------




#--------------------------------Connecting testing method to takeoff button-----------------------------------
        self.tobtn.clicked.connect(clicked)
# -------------------------------Connecting persweep method to persweep button---------------------------------
        self.peribtn.clicked.connect(persweep)





    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Tello Drone Control Panel"))
        self.fbtn.setText(_translate("MainWindow", "FORWARD"))
        self.bcbtn.setText(_translate("MainWindow", "BACKWARD"))
        self.rbtn.setText(_translate("MainWindow", "RIGHT"))
        self.lbtn.setText(_translate("MainWindow", "LEFT"))
        self.peribtn.setText(_translate("MainWindow", "PERIMETER SWEEP"))
        self.overrbtn.setText(_translate("MainWindow", "OVERRIDE ROUT"))
        self.labelmanu.setText(_translate("MainWindow", "Manual Control"))
        self.dfbtn.setText(_translate("MainWindow", "DISPLAY VIDEO FEED"))
        self.tobtn.setText(_translate("MainWindow", "TAKEOFF"))
        self.stopbtn.setText(_translate("MainWindow", "STOP"))




if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
